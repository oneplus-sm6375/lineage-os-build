trigger:
  - main  # Replace with the branch you want to trigger the pipeline on

pr: none  # Disable PR triggers, change if needed

pool:
  vmImage: 'ghcr.io/sushrut1101/docker:arch'

variables:
  MANIFEST: 'https://github.com/PixelExperience/manifest.git -b eleven-plus'
  DEVICE: 'miatoll'
  OEM: 'xiaomi'
  DT_LINK: 'https://github.com/PixelExperience-Devices/device_xiaomi_miatoll.git'
  DT_PATH: 'device/$(OEM)/$(DEVICE)'
  VT_LINK: 'https://gitlab.pixelexperience.org/android/vendor-blobs/vendor_xiaomi_miatoll.git'
  VT_PATH: 'vendor/$(OEM)/$(DEVICE)'
  KT_LINK: 'https://github.com/ArrowOS-Devices/android_kernel_xiaomi_sm6250.git'
  PLATFORM: 'sm6250'
  KT_PATH: 'kernel/$(OEM)/$(PLATFORM)'
  TARGET: 'bacon'
  EXTRA_CMD: 'export SKIP_ABI_CHECKS=true'
  LUNCH_COMBO: 'aosp_$(DEVICE)-userdebug'
  OUTPUT: 'PixelExperience*.zip'

jobs:
- job: Build_And_Upload
  displayName: 'Setting Up, Syncing, Building, and Uploading'
  timeoutInMinutes: 240
  pool:
    vmImage: 'ubuntu-latest'
  
  steps:
  - script: |
      echo "============================"
      echo "Storage Checker Script"
      echo "============================"
      df -h
      lsblk
      ls -l -a -h
    displayName: 'Storage Checker Script'

  - script: |
      echo "============================"
      echo "Syncing The Sources..."
      echo "============================"
      mkdir -p $(Agent.Home)/work
      cd $(Agent.Home)/work
      repo init --depth=1 -u $(MANIFEST)
      repo sync -j4 --force-sync --no-tags --no-clone-bundle
      git clone $(DT_LINK) $(DT_PATH)
      git clone $(VT_LINK) $(VT_PATH)
      git clone $(KT_LINK) $(KT_PATH)
      echo "============================"
      echo "Syncing Complete!"
      echo "============================"
    displayName: 'Syncing Script'

  - script: |
      echo "============================"
      echo "Starting the Build..."
      echo "============================"
      cd $(Agent.Home)/work
      $(EXTRA_CMD)
      export USE_CCACHE=1
      export CCACHE_EXEC=/usr/bin/ccache
      ccache -M 50G
      . build/envsetup.sh
      lunch "$(LUNCH_COMBO)"
      mka -j31 $(TARGET)
    displayName: 'Build Script'

  - script: |
      echo "============================"
      echo "Uploading the Build..."
      echo "============================"
      cd $(Agent.Home)/work/out/target/product/$(DEVICE)
      ls -lh
      pwd
      chmod 777 *
      curl --upload-file $(echo $(OUTPUT)) https://transfer.sh | tee link.txt && echo " "
      echo " "
      echo "============================"
      echo "Build Uploaded!"
      echo "Please see the link below:"
      echo "----------------------------"
      cat link.txt && echo " "
      echo "============================"
    displayName: 'Upload Script'


